#
# OpenAPI Petstore
# This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSPetstore' -name 'UserApi' {
    Context 'Invoke-CreateUser' {
        It 'Test Invoke-CreateUser' {
            #$TestResult = Invoke-PetApiGetPetById -Body "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-CreateUsersWithArrayInput' {
        It 'Test Invoke-CreateUsersWithArrayInput' {
            #$TestResult = Invoke-PetApiGetPetById -Body "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-CreateUsersWithListInput' {
        It 'Test Invoke-CreateUsersWithListInput' {
            #$TestResult = Invoke-PetApiGetPetById -Body "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-DeleteUser' {
        It 'Test Invoke-DeleteUser' {
            #$TestResult = Invoke-PetApiGetPetById -Username "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Get-UserByName' {
        It 'Test Get-UserByName' {
            #$TestResult = Invoke-PetApiGetPetById -Username "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-LoginUser' {
        It 'Test Invoke-LoginUser' {
            #$TestResult = Invoke-PetApiGetPetById -Username "TEST_VALUE" -Password "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-LogoutUser' {
        It 'Test Invoke-LogoutUser' {
            #$TestResult = Invoke-PetApiGetPetById
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Update-User' {
        It 'Test Update-User' {
            #$TestResult = Invoke-PetApiGetPetById -Username "TEST_VALUE" -Body "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

}
